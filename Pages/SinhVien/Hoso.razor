@page "/hoso"
@using UehInternFrontend.Components
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Net.Http.Json
@using Newtonsoft.Json

@inject IJSRuntime JS
@inject HttpClient Http
@inject IConfiguration Configuration

@code {
    public string? api;
    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }

    private SinhvienModel? sinhvien = new SinhvienModel();
    private KhoaModel? khoa = new KhoaModel();
    private UserModel? user = new UserModel();
    private string? mssv = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            mssv = await JS.InvokeAsync<string>("getUserData", "Code");
            await RenderDatas();

            StateHasChanged();
        }
    }

    private async Task RenderDatas()
    {
        UserModel resultUser = await GetInfoUser(mssv);
        SinhvienModel result = await GetSinhVien(mssv);
        KhoaModel resultKhoa = await GetSinhVienByKhoa(mssv);
        if (result != null && resultKhoa != null || resultUser != null)
        {
            khoa = resultKhoa;
            sinhvien = result;
            user = resultUser;
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Sinh viên không tồn tại.");
        }
    }

    private async Task<KhoaModel> GetSinhVienByKhoa(string mssv)
    {
        var response = await Http.GetAsync(api + $"Sinhvien/khoa/{mssv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<KhoaModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Error retrieving sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task<SinhvienModel> GetSinhVien(string mssv)
    {
        var response = await Http.GetAsync(api + $"Sinhvien/{mssv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<SinhvienModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task<UserModel> GetInfoUser(string mssv)
    {
        var response = await Http.GetAsync(api + $"User/GetInfoUser?id={mssv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<UserModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất thông tin : {response.StatusCode}");
            return null;
        }
    }

    private async Task SubmitInfoUser(string id)
    {
        var response = await Http.PutAsJsonAsync(api + $"User/UpdateInfoUser?id={id}", user);

        if (response.IsSuccessStatusCode)
        {
            await RenderDatas();
        }
        else
        {
            Console.WriteLine("Đã xảy ra lỗi khi gửi thông tin!");
        }
    }

}

<PageTitle>Hồ Sơ</PageTitle>

<CheckUserComponent CheckRole="sinhvien">
    <ItemContent>

    <div class="col-span-2">
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Thông tin cá nhân</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label for="first-name" class="block mb-2 text-sm font-medium text-gray-900">
                        Mã sinh viên
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.mssv
                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label for="last-name" class="block mb-2 text-sm font-medium text-gray-900">
                        Họ tên
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.ho  @sinhvien.ten
                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label for="birthday" class="block mb-2 text-sm font-medium text-gray-900">
                        Lớp
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.thuoclop

                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label for="birthday" class="block mb-2 text-sm font-medium text-gray-900">
                        Khoá
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.khoagoc
                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label for="country" class="block mb-2 text-sm font-medium text-gray-900">
                        Tên học phần
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.tenhp
                    </p>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900">
                        Thuộc khoa
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @khoa.tenkhoa
                    </p>
                </div>

            </div>
        </div>

        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Thay đổi thông tin liên lạc</h3>
                <div class="grid grid-cols-6 gap-6">
                    <div class="col-span-6 sm:col-span-3">
                        <label for="email" class="block mb-2 text-sm font-medium text-gray-900">
                            Email
                        </label>
                        <input @bind ="@user.email" type="email" name="email" id="email" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" placeholder="name@gmail.com" required>
                    </div>

                    <div class="col-span-6 sm:col-span-3">
                        <label for="phone" class="block mb-2 text-sm font-medium text-gray-900">
                            Số điện thoại
                        </label>
                            <input @bind="@user.sdt" type="text" name="phone" id="phone" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" placeholder="0923456789" required>
                    </div>

                    <div class="col-span-6 sm:col-full">
                            <button @onclick="() => SubmitInfoUser(mssv)" class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                            Lưu thay đổi
                        </button>
                    </div>
                </div>
        </div>
    </div>

    </ItemContent>
</CheckUserComponent>
