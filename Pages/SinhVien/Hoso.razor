@page "/hoso"

@code {
    public string? api;
    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }

    private SinhvienModel? sinhvien = new SinhvienModel();
    private KhoaModel? khoa = new KhoaModel();
    private UserModel? user = new UserModel();
    private string? mssv = "";

    private User? currentUser;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            currentUser = await Service.GetUser(JS, NavigationManager);
            mssv = currentUser.Code;
            StateHasChanged();

            await RenderDatas();
            StateHasChanged();
        }
    }

    private async Task RenderDatas()
    {
        UserModel resultUser = await GetInfoUser(mssv);
        SinhvienModel result = await GetSinhVien(mssv);
        KhoaModel resultKhoa = await GetSinhVienByKhoa(mssv);
        if (result != null && resultKhoa != null || resultUser != null)
        {
            khoa = resultKhoa;
            sinhvien = result;
            user = resultUser;
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Sinh viên không tồn tại.");
        }
    }

    private async Task<KhoaModel> GetSinhVienByKhoa(string mssv)
    {
        var response = await Http.GetAsync(api + $"Sinhvien/khoa/{mssv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<KhoaModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Error retrieving sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task<SinhvienModel> GetSinhVien(string mssv)
    {
        var response = await Http.GetAsync(api + $"Sinhvien/{mssv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<SinhvienModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task<UserModel> GetInfoUser(string mssv)
    {
        var response = await Http.GetAsync(api + $"User/GetInfoUser?id={mssv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<UserModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất thông tin : {response.StatusCode}");
            return null;
        }
    }

    private async Task SubmitInfoUser(string id)
    {
        var response = await Http.PutAsJsonAsync(api + $"User/UpdateInfoUser?id={id}", user);

        if (response.IsSuccessStatusCode)
        {
            await RenderDatas();
            await closeBtn();
            await JS.InvokeVoidAsync("alert", "Cập nhật thông tin thành công!");

        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Đã xảy ra lỗi khi gửi thông tin!");
        }
    }

    private bool editBtn = false;

    private async void modelBtnClick()
    {
        editBtn = true;
        StateHasChanged();
    }

    private async Task closeBtn()
    {
        editBtn = false;
        StateHasChanged();
    }

}

<PageTitle>Hồ Sơ</PageTitle>

<CheckUserComponent CheckRole="student" CheckDot=2>
    <ItemContent>

    <div class="col-span-2">
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Thông tin cá nhân</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Mã sinh viên
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.mssv
                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Họ tên
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.ho  @sinhvien.ten
                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Lớp
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.thuoclop

                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Khoá
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.khoagoc
                    </p>
                </div>
                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Tên học phần
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @sinhvien.tenhp
                    </p>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Thuộc khoa
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @khoa.tenkhoa
                    </p>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Email
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @user.email
                    </p>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label class="block mb-2 text-sm font-medium text-gray-900">
                        Số diện thoại
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @user.sdt
                    </p>
                </div>

                <div class="col-span-6 sm:col-full">
                        <button class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit"
                            @onclick="() => modelBtnClick()"
                            >
                        Thay đổi thông tin liên lạc
                    </button>
                </div>

            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="flex items-center justify-center fixed w-screen h-screen z-30">
        @if (editBtn)
        {
            <div class="fixed inset-0 bg-gray-900/50" @onclick="() => closeBtn()"></div>
        }

        <!-- Edit User Modal -->
        @if (editBtn)
        {
            <div class="fixed top-1/2 left-1/2 right-0 -translate-x-1/2 -translate-y-1/2 flex items-center justify-center overflow-x-hidden overflow-y-auto h-fit"
                id="edit-user-modal">
                <div class="relative w-full h-full max-w-2xl px-4 md:h-auto">
                    @* <!-- Modal content --> *@
                    <div class="relative bg-white rounded-lg shadow">
                        @* <!-- Modal header --> *@
                        <div class="flex items-start justify-between p-5 border-b rounded-t">
                            <h3 class="text-xl font-semibold">
                                Thay đổi thông tin liên lạc
                            </h3>
                            <button type="button"
                                class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center"
                                @onclick="() => closeBtn()">
                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd"
                                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                        clip-rule="evenodd"></path>
                                </svg>
                            </button>
                        </div>
                        @* <!-- Modal body --> *@
                        <div class="p-6 space-y-6">
                            <form action="#">
                                <div class="grid grid-6 gap-6">
                                    <div class="col-span-3">
                                        <label for="email"
                                            class="block mb-2 text-sm font-medium text-gray-900">Email</label>
                                        <input @bind ="@user.email" type="email" name="email" id="email"
                                            class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                    </div>
                                    <div class="col-span-6 sm:col-span-3">
                                        <label for="phone"
                                            class="block mb-2 text-sm font-medium text-gray-900">Số điện thoại</label>
                                        <input @bind="@user.sdt" type="text" name="phone" id="phone"
                                            class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                    </div>                                
                                </div>
                            </form>
                        </div>
                        @* <!-- Modal footer --> *@
                        <div class="items-center p-6 border-t border-gray-200 rounded-b">
                            <button 
                                class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center"
                                type="submit"
                                @onclick="() => SubmitInfoUser(mssv)"
                                >
                                Lưu thay đổi
                                </button>
                        </div>

                    </div>
                </div>
            </div>
        }

    </div>

    </ItemContent>
</CheckUserComponent>
