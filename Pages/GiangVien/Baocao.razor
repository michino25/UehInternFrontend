@page "/baocao"
@using UehInternFrontend.Components
@using System.Net.Http.Headers
@using Newtonsoft.Json
@using UehInternFrontend

@inject IJSRuntime JS
@inject HttpClient Http
@inject IConfiguration Configuration

@code {
    public string? api;
    protected string? Code = "";
    private List<SinhvienModel>? sinhviens = new List<SinhvienModel>();
    private DotModel dot = new DotModel();
    private string? magv = "";
    private string? madot = "DOT001";

    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetData();

            magv = Code;
            await RenderDatas();

            StateHasChanged();
        }
    }

    private async Task GetData()
    {
        string token = await JS.InvokeAsync<string>("userInfo");
        string json = AES.DecryptData(token);

        if (!string.IsNullOrEmpty(json))
        {
            User? user = JsonConvert.DeserializeObject<User>(json);
            Code = user.Code;
            StateHasChanged();
        }
    }

    private async Task RenderDatas()
    {
        dot = await KiemtraDot();
        var result = await SinhVienByGiangVien(dot.madot,magv);
        if (result != null )
        {
            sinhviens = result;
            StateHasChanged();
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Giảng viên không được tìm thấy.");
        }
    }

    private async Task<List<SinhvienModel>> SinhVienByGiangVien(string madot,string magv)
    {
        var response = await Http.GetAsync(api + $"Giangvien/SinhVienByGiangVien?madot={madot}&magv={magv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<List<SinhvienModel>>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task<DotModel> KiemtraDot()
    {
        var response = await Http.GetAsync(api + "Dot");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<DotModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất dot: {response.StatusCode}");
            return null;
        }
    }
    private async Task DownloadZipFile(string madot,string magv)
    {
        try
        {
            var response = await Http.GetAsync(api + $"Ketqua/generatezip?madot={madot}&giangVienId={magv}");
            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsByteArrayAsync();
                
                // Lấy các giá trị từ tiêu đề HTTP
                var contentDisposition = response.Content.Headers.ContentDisposition;
                var fileName = contentDisposition.FileName ?? "Dsbaocaobangdiemchitiet_{magv}.zip";
                var contentType = response.Content.Headers.ContentType?.ToString() ?? "application/zip";
                
                // Tải file zip về máy
                await JS.InvokeVoidAsync("window.downloadFileFromByteArray", fileName, content);
                await JS.InvokeVoidAsync("alert", "Tải thành công");

            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Không tìm thấy file");

            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", "Đã xảy ra xự cố");

        }
    }

    private async Task DownloadPdf(string mssv)
    {
        try
        {
            var response = await Http.GetAsync(api + $"Ketqua/generatepdfbysv?mssv={mssv}");
            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsByteArrayAsync();

                // Lấy các giá trị từ tiêu đề HTTP
                var contentDisposition = response.Content.Headers.ContentDisposition;
                var fileName = contentDisposition.FileName ?? "BaoCaoChiTiet_{mssv}.pdf";
                var contentType = response.Content.Headers.ContentType?.ToString() ?? "application/pdf";

            
                await JS.InvokeVoidAsync("window.downloadFileFromPDf", fileName, content);
                await JS.InvokeVoidAsync("alert", "Tải thành công");
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Không tìm thấy file");

            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", "Đã xảy ra xự cố");
        }
    }


}
<PageTitle>Báo cáo</PageTitle>

<CheckUserComponent CheckRole="teacher">
<ItemContent>


<div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg">
    <div
        class="bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5">
        <div class="w-full mb-5 sm:flex">
            <div class="mb-3 flex flex-col divide-x divide-gray-100">
                <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl">Danh sách sinh viên</h1>
                <h1>Hiển thị bảng sinh viên, tùy chọn tải báo cáo của từng sinh viên, tải toàn bộ</h1>
            </div>

            <div class="flex items-center ml-auto space-x-2 sm:space-x-3">
                <button @onclick="() => DownloadZipFile(madot,magv)"
                    class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:ring-teal-300 sm:w-auto">
                    <svg class="w-5 h-5 mr-2 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                            d="M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z"
                            clip-rule="evenodd"></path>
                    </svg>
                    Tải toàn bộ 

                </button>
            </div>
        </div>
    </div>
    <div class="flex flex-col">
        <div class="overflow-x-auto">
            <div class="inline-block min-w-full align-middle">
                <div class="overflow-hidden shadow">
                    <table class="min-w-full divide-y divide-gray-200 table-fixed">
                        <thead class="bg-gray-100">
                            <tr>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Sinh viên
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Mã sinh viên
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Lớp
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Khóa
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Hành động
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @if (sinhviens != null)
                            { 
                                @foreach (var sinhvien in sinhviens)
                                {
                                    <tr class="hover:bg-gray-100">
                                <td class="flex items-center p-4 mr-12 space-x-6 whitespace-nowrap">
                                    <div class="text-sm font-normal text-gray-500">
                                        <div class="text-base font-semibold text-gray-900">@sinhvien.ho @sinhvien.ten
                                        </div>
                                        <div class="text-sm font-normal text-gray-500">
                                            anh@st.ueh.edu.vn</div>
                                    </div>
                                </td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    @sinhvien.mssv
                                </td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    @sinhvien.thuoclop</td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    K@(sinhvien.khoagoc.Substring(5,2))</td>
                                <td class="p-4 space-x-2 whitespace-nowrap">
                                    <button @onclick="() => DownloadPdf(sinhvien.mssv)"
                                    type="button" data-modal-toggle="edit-user-modal"
                                        class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300">
                                        <svg class="w-5 h-5 mr-2 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                                            xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd"
                                                d="M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z"
                                                clip-rule="evenodd"></path>
                                        </svg>
                                        Tải báo cáo
                                    </button>
                                </td>
                            </tr>
                                }
                            }
                            


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div
        class="sticky bottom-0 right-0 items-center w-full pt-4 bg-white border-t border-gray-200 sm:flex sm:justify-between">
        <div class="flex items-center mb-4 sm:mb-0">
            <a href="#"
                class="inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd"
                        d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                        clip-rule="evenodd"></path>
                </svg>
            </a>
            <a href="#"
                class="inline-flex justify-center p-1 mr-2 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd"
                        d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                        clip-rule="evenodd"></path>
                </svg>
            </a>
            <span class="text-sm font-normal text-gray-500">Hiển thị <span
                    class="font-semibold text-gray-900">1-10</span> trong số <span
                    class="font-semibold text-gray-900">234</span> sinh viên</span>
        </div>
    </div>

</div>


</ItemContent>
</CheckUserComponent>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}
