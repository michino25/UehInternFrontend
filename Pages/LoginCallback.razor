@page "/LoginCallback/"
@layout EmptyLayout
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.WebUtilities
@using UehInternFrontend
@using System.Text.Json
@using global::Login.ST.UEH
@code {

    string token = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var uri = new Uri(NavigationManager.Uri);
        var queryParameters = QueryHelpers.ParseQuery(uri.Query);
        var t = queryParameters["t"];

        await JSRuntime.InvokeVoidAsync("resetCSSLogin");
        await JSRuntime.InvokeVoidAsync("loadScript", "/js/tailwindcss.js");
        User? user;

        switch (t) {
            case "exist-admin":
                NavigationManager.NavigateTo("/tongquan");
                break;

            case "exist-giangvien":
                NavigationManager.NavigateTo("/sinhvien");
                break;

            case "exist-sinhvien":
                NavigationManager.NavigateTo("/thongtin");
                break;
            
            case "gv":

                user = new User
                {
                    Code = "001747",
                    Email = "thinhdt@ueh.edu.vn",
                    Name = "Đặng Thái Thịnh",
                    Role = "giangvien"
                };

                token = JsonSerializer.Serialize(user);
                token = AES.EncryptData(token);

                await JSRuntime.InvokeVoidAsync("userLogin", token, 30);
                await JSRuntime.InvokeVoidAsync("resetCSSLogin");
                await JSRuntime.InvokeVoidAsync("loadScript", "/js/tailwindcss.js");
                NavigationManager.NavigateTo("/sinhvien");

                break;

            case "admin":

                user = new User
                {
                    Code = "000688",
                    Email = "hienphan@ueh.edu.vn",
                    Name = "Phan Hiền",
                    Role = "admin"
                };

                token = JsonSerializer.Serialize(user);
                token = AES.EncryptData(token);

                await JSRuntime.InvokeVoidAsync("userLogin", token, 30);
                await JSRuntime.InvokeVoidAsync("resetCSSLogin");
                await JSRuntime.InvokeVoidAsync("loadScript", "/js/tailwindcss.js");
                NavigationManager.NavigateTo("/tongquan");

                break;

            default:

                var obj = LoginStUEH.GetInfo(t);
                if (obj != null)
                {
                    Student stu = (Student) obj;
                    user = (User) stu;

                    token = JsonSerializer.Serialize(user);
                    token = AES.EncryptData(token);

                    await JSRuntime.InvokeVoidAsync("userLogin", token, 30);
                    NavigationManager.NavigateTo("/thongtin");
                }
                break;


        }

    }

}
