@page "/phancong/dangkysom/{idGv}"

@code {
    [Parameter] public string? idGv { get; set; }
    private string makhoa = "";
    private string madot = "";

    public string? api;

    private List<DangkyModel>? sinhviens = new List<DangkyModel>();
    private GiangvienRequest thongtinchitietgv = new GiangvienRequest();

    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
        idGv = Cipher.Decrypt(idGv);
    }

    private User? currentUser;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            currentUser = await Service.GetUser(JS, NavigationManager);
            makhoa = currentUser.MaKhoa;
            madot = currentUser.MaDot;
            StateHasChanged();

            await RenderDatas();
            StateHasChanged();
        }
    }

    private async Task RenderDatas()
    {
        thongtinchitietgv = await GetThongTinGiangvien(idGv);

        var result = await GetSinhVienByGiaoVien(madot,makhoa,idGv);
        if (result != null )
        {
            sinhviens = result;
            StateHasChanged();
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Giảng viên không được tìm thấy.");
        }
    }
    private async Task<List<DangkyModel>> GetSinhVienByGiaoVien(string madot,string makhoa, string magv)
    {
        var response = await Http.GetAsync(api + $"Dangky/GetSinhVienByGiaoVien?madot={madot}&makhoa={makhoa}&magv={magv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<List<DangkyModel>>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task<GiangvienRequest> GetThongTinGiangvien(string magv)
    {
        var response = await Http.GetAsync(api + $"Giangvien/GetThongtinGiangvien?magv={magv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<GiangvienRequest>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Không tìm thấy : {response.StatusCode}");
            return null;
        }
    }

}

<PageTitle>Danh sách sinh viên</PageTitle>

<CheckUserComponent CheckRole="admin" CheckDot=1>
<ItemContent>


<div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg">
<div
    class="bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5">
    <div class="w-full mb-5">
        <div class="mb-4">

            <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl">Danh sách sinh viên</h1>
            <h1>Được giảng viên @thongtinchitietgv.tengv đăng ký hướng dẫn</h1>
        </div>
    </div>
</div>
<div class="flex flex-col">
    <div class="overflow-x-auto">
        <div class="inline-block min-w-full align-middle">
            <div class="overflow-hidden shadow">
                <table class="min-w-full divide-y divide-gray-200 table-fixed">
                    <thead class="bg-gray-100">
                        <tr>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Sinh viên
                            </th>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Mã sinh viên
                            </th>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Lớp
                            </th>

                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                    @if (sinhviens.Count > 0 )
                    { 
                        @foreach (var sinhvien in sinhviens)
                        {
                                <tr class="hover:bg-gray-100">
                                <td class="flex items-center p-4 mr-12 space-x-6 whitespace-nowrap">
                                    <div class="text-sm font-normal text-gray-500">
                                        <div class="text-base font-semibold text-gray-900">
                                            @sinhvien.ho @sinhvien.ten
                                        </div>
                                        <div class="text-sm font-normal text-gray-500">
                                            @sinhvien.email
                                        </div>
                                    </div>
                                </td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    @sinhvien.mssv
                                </td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    @sinhvien.lop</td>

                            </tr>
                        }
                    }
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="sticky bottom-0 right-0 items-center w-full py-4 -mb-4 bg-white border-t border-gray-200 sm:flex sm:justify-between">
    <div class="flex items-center mb-4 sm:mb-0">
        <span class="text-sm font-normal text-gray-500">
            Hiển thị 
            <span class="font-semibold text-gray-900">@sinhviens.Count</span>
            sinh viên</span>
    </div>
</div>

</div>

</ItemContent>
</CheckUserComponent>
