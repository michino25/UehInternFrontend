@page "/chuyennganh"
@using UehInternFrontend.Components
@using System.Net.Http.Headers
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components

@inject IJSRuntime JS
@inject HttpClient Http
@inject IConfiguration Configuration
<PageTitle>Chuyên ngành</PageTitle>

@code {
    public string? api;
    private long maxFileSize = long.MaxValue;
    private int maxAllowedFiles = int.MaxValue;
    private string makhoa ="CNTTKD";
    private ChuyennganhModel chuyennganh = new ChuyennganhModel();

    private List<ChuyennganhModel>? chuyennganhs = new List<ChuyennganhModel>();

    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }


    protected override async Task OnInitializedAsync()
    {
        await RenderDatas();
    }

    private async Task RenderDatas()
    {
        var result = await GetChuyennganhsByKhoa("CNTTKD");
        if (result != null )
        {
            chuyennganhs = result;
            StateHasChanged();
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Chuyên ngành không được tìm thấy.");
        }
    }
    private async Task<List<ChuyennganhModel>> GetChuyennganhsByKhoa(string makhoa)
    {
        var response = await Http.GetAsync(api + $"Chuyennganh/GetChuyennganhsByKhoa/{makhoa}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<List<ChuyennganhModel>>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles(maxAllowedFiles);
        var makhoa = "CNTTKD";

        using var content = new MultipartFormDataContent();

        foreach (var file in files)
        {
            var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            content.Add(fileContent, "formFile", file.Name);
        }

        var apiUrl = api + $"Chuyennganh/formFile?makhoa={Uri.EscapeDataString(makhoa)}";
        var response = await Http.PostAsync(apiUrl, content);
        if (!response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "File not found.");
        }
        response.EnsureSuccessStatusCode();
        await JS.InvokeVoidAsync("alert", "Import file thành công");
        response.EnsureSuccessStatusCode();
    }


    private async Task SubmitChuyenNganh(string makhoa)
    {
        chuyennganh.makhoa = makhoa;
        var url = api + $"Chuyennganh/CreateChuyennganh";
        var response = await Http.PostAsJsonAsync(url, chuyennganh);
        closeBtn();

        if (response.IsSuccessStatusCode)
        {
            await RenderDatas();
            await JS.InvokeVoidAsync("alert", "Thêm chuyên ngành  thành công");
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Thêm chuyên ngành thất bại");
        }
    }

    private async Task UpdateChuyenNganh(string macn )
    {
        var response = await Http.PutAsJsonAsync(api + $"Chuyennganh/UpdateChuyennganh?macn={macn}", thongtinchitietcn);

        if (response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "Cập nhật chuyên ngành thành công");
            RenderDatas();
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Cập nhật thất bại");
        }
    }


    private async Task DeleteChuyenNganh(string macn)
    {
        var response = await Http.DeleteAsync(api + $"Chuyennganh/DeleteChuyennganh?macn={macn}");

        if (response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "Xóa chuyên ngành thành công");
            RenderDatas();
            closeBtn();
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Xóa chuyên ngành thất bại");
        }
   }


    private async Task<ChuyennganhModel> GetThongTinChuyenNganh(string macn)
    {
        var response = await Http.GetAsync(api + $"Chuyennganh/GetChuyennganhById?macn={macn}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<ChuyennganhModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Không tìm thấy : {response.StatusCode}");
            return null;
        }
    }
    private bool addBtn = false;
    private bool editBtn = false;
    private bool deleteBtn = false;
    private ChuyennganhModel thongtinchitietcn = new ChuyennganhModel();

    private async void modelBtnClick(int btn, string data = "")
    {
        switch (btn)
        {
            case 1:
                addBtn = true;
                break;
            case 2:
                editBtn = true;
                 thongtinchitietcn  = await GetThongTinChuyenNganh(data); 
                break;
            case 3:
                deleteBtn = true;
                 thongtinchitietcn  = await GetThongTinChuyenNganh(data); 
                break;
        }
        StateHasChanged();
    }

    private async Task closeBtn()
    {
        addBtn = false;
        editBtn = false;
        deleteBtn = false;
        StateHasChanged();
    }

}

<CheckUserComponent CheckRole="admin">
<ItemContent>

<div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg">
<div
    class="bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5">
    <div class="w-full mb-5 sm:flex">
        <div class="mb-3 flex flex-col divide-x divide-gray-100">
            <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl">Danh sách chuyên ngành</h1>
            <h1>Nút import chuyên ngành, bảng chuyên ngành render</h1>
        </div>

        <div class="flex items-center ml-auto space-x-2 sm:space-x-3">

            <button type="button" @onclick="() => modelBtnClick(1)"
                class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 sm:w-auto">
                <svg class="w-5 h-5 mr-2 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd"
                        d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                        clip-rule="evenodd"></path>
                </svg>
                Thêm chuyên ngành
            </button>
            <button
                class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:ring-teal-300 sm:w-auto">
                <svg class="w-5 h-5 mr-2 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd"
                        d="M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z"
                        clip-rule="evenodd"></path>
                </svg>
                <label for="actual-btn">Nhập file</label>
                <InputFile id="actual-btn" class="hidden" OnChange="@OnInputFileChange" multiple />
            </button>
        </div>
    </div>
</div>
<div class="flex flex-col">
    <div class="overflow-x-auto">
        <div class="inline-block min-w-full align-middle">
            <div class="overflow-hidden shadow">
                <table class="min-w-full divide-y divide-gray-200 table-fixed">
                    <thead class="bg-gray-100">
                        <tr>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                chuyên ngành
                            </th>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Mã chuyên ngành
                            </th>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Hành động
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @if (chuyennganhs != null)
                        { 
                            @foreach (var chuyennganh in chuyennganhs)
                            {
                                <tr class="hover:bg-gray-100">
                                    <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                        @chuyennganh.tencn</td>
                                    <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                        @chuyennganh.macn</td>
                                    <td class="p-4 space-x-2 whitespace-nowrap">
                                        <button class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300"
                                            @onclick="() => modelBtnClick(2, chuyennganh.macn)">
                                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20"
                                                xmlns="http://www.w3.org/2000/svg">
                                                <path
                                                    d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z">
                                                </path>
                                                <path fill-rule="evenodd"
                                                    d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
                                                    clip-rule="evenodd"></path>
                                            </svg>
                                            Sửa
                                        </button>
                                        
                                        <button class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-orange-600 rounded-lg hover:bg-orange-800 focus:ring-4 focus:ring-orange-300"
                                            @onclick="() => modelBtnClick(3, chuyennganh.macn)">
                                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20"
                                                xmlns="http://www.w3.org/2000/svg">
                                                <path fill-rule="evenodd"
                                                    d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                                                    clip-rule="evenodd"></path>
                                            </svg>
                                            Xóa
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div
    class="sticky bottom-0 right-0 items-center w-full pt-4 bg-white border-t border-gray-200 sm:flex sm:justify-between">
    <div class="flex items-center mb-4 sm:mb-0">
        <a href="#"
            class="inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
            <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd"
                    d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                    clip-rule="evenodd"></path>
            </svg>
        </a>
        <a href="#"
            class="inline-flex justify-center p-1 mr-2 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
            <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd"
                    d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                    clip-rule="evenodd"></path>
            </svg>
        </a>
        <span class="text-sm font-normal text-gray-500">Hiển thị <span
                class="font-semibold text-gray-900">1-5</span> trong số <span
                class="font-semibold text-gray-900">5</span> chuyên ngành</span>
    </div>
</div>

<!-- Modal -->
<div class="flex items-center justify-center fixed w-screen h-screen z-30">
    @if (addBtn || editBtn || deleteBtn)
    {
        <div class="fixed inset-0 bg-gray-900/50" @onclick="() => closeBtn()"></div>
    }

    <!-- Edit User Modal -->
    @if (editBtn)
    {
        <div class="fixed top-1/2 left-1/2 right-0 -translate-x-1/2 -translate-y-1/2 flex items-center justify-center overflow-x-hidden overflow-y-auto h-full"
            id="edit-user-modal">
            <div class="relative w-full h-full max-w-2xl px-4 md:h-auto">
                @* <!-- Modal content --> *@
                <div class="relative bg-white rounded-lg shadow">
                    @* <!-- Modal header --> *@
                    <div class="flex items-start justify-between p-5 border-b rounded-t">
                        <h3 class="text-xl font-semibold">
                            Chỉnh sửa thông tin chuyên ngành
                        </h3>
                        <button type="button"
                            class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center"
                            @onclick="() => closeBtn()">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd"
                                    d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                    clip-rule="evenodd"></path>
                            </svg>
                        </button>
                    </div>
                    @* <!-- Modal body --> *@
                    <div class="p-6 space-y-6">
                        <form action="#">
                            <div class="grid grid-cols-6 gap-6">
                                <div class="col-span-6 sm:col-span-3">
                                    <label for="first-name"
                                        class="block mb-2 text-sm font-medium text-gray-900">Mã chuyên ngành</label>
                                    <input @bind ="@thongtinchitietcn.macn" type="text" name="first-name" id="first-name"
                                        class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                </div>
                                <div class="col-span-6 sm:col-span-3">
                                    <label for="last-name"
                                        class="block mb-2 text-sm font-medium text-gray-900">Tên chuyên ngành</label>
                                    <input @bind ="@thongtinchitietcn.tencn" type="text" name="last-name" id="last-name"
                                        class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                </div>                                
                            </div>
                        </form>
                    </div>
                    @* <!-- Modal footer --> *@
                    <div class="items-center p-6 border-t border-gray-200 rounded-b">
                        <button 
                            class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center"
                            type="submit"
                                        @onclick="() => UpdateChuyenNganh(thongtinchitietcn.macn)">
                            Lưu chuyên ngành
                            </button>
                    </div>

                </div>
            </div>
        </div>
    }

    <!-- Add User Modal -->
    @if (addBtn)
    {
        <div class="fixed top-1/2 left-1/2 right-0 -translate-x-1/2 -translate-y-1/2 flex items-center justify-center overflow-x-hidden overflow-y-auto h-full">
            <div class="relative w-full h-full max-w-2xl px-4 md:h-auto">
                @* <!-- Modal content --> *@
                <div class="relative bg-white rounded-lg shadow">
                    @* <!-- Modal header --> *@
                    <div class="flex items-start justify-between p-5 border-b rounded-t">
                        <h3 class="text-xl font-semibold">
                            Thêm chuyên ngành
                        </h3>
                        <button type="button"
                            class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center"
                            @onclick="() => closeBtn()">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd"
                                    d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                    clip-rule="evenodd"></path>
                            </svg>
                        </button>
                    </div>
                    @* <!-- Modal body --> *@
                    <div class="p-6 space-y-6">
                        <div class="grid grid-cols-6 gap-6">
                            <div class="col-span-6 sm:col-span-3">
                                <label for="magv"
                                    class="block mb-2 text-sm font-medium text-gray-900">Mã chuyên ngành</label>
                                <input @bind ="@chuyennganh.macn" type="text" name="magv" id="magv" required
                                    class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                            </div>
                            <div class="col-span-6 sm:col-span-3">
                                <label for="name"
                                    class="block mb-2 text-sm font-medium text-gray-900">Tên chuyên ngành</label>
                                <input  @bind ="@chuyennganh.tencn" type="text" name="name" id="name" required
                                    class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                            </div>
                        </div>
                    </div>
                    @* <!-- Modal footer --> *@
                    <div class="items-center p-6 border-t border-gray-200 rounded-b">
                        <button
                            class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center"
                            type="submit"
                             @onclick="() => SubmitChuyenNganh(makhoa)" 
                            >
                            Thêm chuyên ngành
                        </button>
                    </div>

                </div>
            </div>
        </div>
    }

    <!-- Delete User Modal -->
    @if (deleteBtn)
    {
        <div class="fixed top-1/2 left-1/2 right-0 -translate-x-1/2 -translate-y-1/2 flex items-center justify-center overflow-x-hidden overflow-y-auto h-full"
            id="delete-user-modal">
            <div class="relative w-full h-full max-w-md px-4 md:h-auto">
                @* <!-- Modal content --> *@
                <div class="relative bg-white rounded-lg shadow">
                    @* <!-- Modal header --> *@
                    <div class="flex justify-end p-2">
                        <button type="button"
                            class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center"
                            @onclick="() => closeBtn()">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd"
                                    d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                    clip-rule="evenodd"></path>
                            </svg>
                        </button>
                    </div>
                    @* <!-- Modal body --> *@
                    <div class="p-6 pt-0 text-center">
                        <svg class="w-16 h-16 mx-auto text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <h3 class="mt-5 mb-6 text-lg text-gray-500">Bạn có chắc muốn xóa chuyên ngành này ?</h3>
                        <button 
                            class="text-white bg-orange-600 hover:bg-orange-800 focus:ring-4 focus:ring-orange-300 font-medium rounded-lg text-base inline-flex items-center px-6 py-2.5 text-center mr-3"
                                        @onclick="() =>  DeleteChuyenNganh(thongtinchitietcn.macn)">
                            Xóa
                        </button>
                        <button
                            class="text-gray-900 bg-white hover:bg-gray-100 focus:ring-4 focus:ring-teal-300 border border-gray-300 font-medium inline-flex items-center rounded-lg text-base px-6 py-2.5 text-center"
                            @onclick="() => closeBtn()">
                            Hủy
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

</div>

</div>

</ItemContent>
</CheckUserComponent>


