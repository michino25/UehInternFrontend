@page "/phancong/gvhdsv"

@code {
    public string? api;
    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }

    private string? makhoa = "";
    private string? madot = "";
    private SinhvienModel sinhvien = new SinhvienModel();
    private string hoten = "";
    private string loai = "";
    private string magvhd;
    private List<GiangvienViewModel>? giangviens = new List<GiangvienViewModel>();
    private List<GiangvienRequest>? giangviends = new List<GiangvienRequest>();

    private long maxFileSize = long.MaxValue;
    private int maxAllowedFiles = int.MaxValue;

    private User? currentUser;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            currentUser = await Service.GetUser(JS, NavigationManager);
            makhoa = currentUser.MaKhoa;
            madot = currentUser.MaDot;
            StateHasChanged();

            await RenderDatas();
        }
    }

    private async Task RenderDatas()
    {
        giangviends = await GetGiangvienByKhoas(makhoa);

        var result = await GetGiangVienAndSinhVienHuongDan(madot,makhoa);
        if (result != null )
        {
            giangviens = result;
            StateHasChanged();

        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Giảng viên không được tìm thấy.");
        }
    }
    private async Task<List<GiangvienRequest>> GetGiangvienByKhoas(string makhoa)
    {
        var response = await Http.GetAsync(api + $"Giangvien/khoa/{makhoa}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<List<GiangvienRequest>>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }
    private async Task<List<GiangvienViewModel>> GetGiangVienAndSinhVienHuongDan(string madot,string makhoa)
    {
        var response = await Http.GetAsync(api + $"Giangvien/sinhvientotal?madot={madot}&makhoa={makhoa}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<List<GiangvienViewModel>>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles(maxAllowedFiles);

        using var content = new MultipartFormDataContent();

        foreach (var file in files)
        {
            var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            content.Add(fileContent, "formFile", file.Name);
        }

        var apiUrl = api + $"Phancong/formFile?madot={madot}";
        var response = await Http.PostAsync(apiUrl, content);
        if (!response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "File không được cập nhất");
        }
        else {
            RenderDatas();
            await JS.InvokeVoidAsync("alert", "Cập nhật thành công");

        }

        response.EnsureSuccessStatusCode();

    }

    private async Task DownloadExcelFile(string madot, string makhoa)
    {
        var response = await Http.GetAsync(api + $"Phancong/generate?madot={madot}&makhoa={makhoa}");
        if (response.IsSuccessStatusCode)
        {
            var fileName = response.Content.Headers.ContentDisposition.FileName;
            var contentType = response.Content.Headers.ContentType.MediaType;
            var content = await response.Content.ReadAsByteArrayAsync();

            await JS.InvokeVoidAsync("downloadFileExcel", fileName, content, contentType);

        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Không tìm thấy tệp tin.");
        }
    }


    private async Task HandleMssvChange(ChangeEventArgs e)
    {
        string mssv = e.Value.ToString();
        if (!string.IsNullOrEmpty(mssv))
        {
            var response = await Http.GetAsync(api + $"Sinhvien/{mssv}");
            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsStringAsync();
                var uploadModel = JsonConvert.DeserializeObject<SinhvienModel>(content);
                sinhvien = uploadModel;
                hoten = sinhvien.ho + " " + sinhvien.ten;
                loai = sinhvien.malop.Substring(1, 4);
            } else {
                loai ="";
                hoten = "";
            }

        }

    }


    private async Task SubmitGiangvien()
    {
        PhancongRequest phancongRequest = new PhancongRequest();
        phancongRequest.madot = madot;
        phancongRequest.mssv = sinhvien.mssv;
        phancongRequest.maloai = loai;
        phancongRequest.magv = magvhd;

        var url = api + $"Phancong";
        var response = await Http.PostAsJsonAsync(url, phancongRequest);
        closeBtn();

        if (response.IsSuccessStatusCode)
        {
            await RenderDatas();
            await JS.InvokeVoidAsync("alert", "Thêm phân công thành công");
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Thêm phân công thất bại");
        }
    }



    private bool addBtn = false;
    private async void modelBtnClick()
    {
        addBtn = true;
        StateHasChanged();
    }

    private async Task closeBtn()
    {
        addBtn = false;
        StateHasChanged();
    }


}

<PageTitle>Phân công GVHD - SV</PageTitle>

<CheckUserComponent CheckRole="admin" CheckDot=1>
<ItemContent>

<div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg">
    <div
        class="bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5">
        <div class="w-full mb-5 sm:flex">
            <div class="mb-3 flex flex-col divide-x divide-gray-100">
                <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl">Danh sách phân công giảng viên</h1>
            </div>

            <div class="flex items-center ml-auto space-x-2 sm:space-x-3">
                <button type="button" @onclick="() => modelBtnClick()"
                    class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 sm:w-auto">
                    <svg class="w-5 h-5 mr-2 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                            d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                            clip-rule="evenodd"></path>
                    </svg>
                    Thêm phân công
                </button>
                <button @onclick="() => DownloadExcelFile(madot,makhoa) "
                    class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-orange-700 hover:bg-orange-800 focus:ring-4 focus:ring-orange-300 sm:w-auto">
                    <svg class="w-5 h-5 mr-2 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                            d="M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z"
                            clip-rule="evenodd"></path>
                    </svg>
                    Tải danh sách chính thức
                </button>
                <button 
                    class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:ring-teal-300 sm:w-auto">
                    <svg class="w-5 h-5 mr-2 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                            d="M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z"
                            clip-rule="evenodd"></path>
                    </svg>  
                    <label for="actual-btn">Nhập file</label>
                    <InputFile id="actual-btn" class="hidden" OnChange="@OnInputFileChange" multiple />
                </button>
            </div>
        </div>
    </div>
    <div class="flex flex-col">
        <div class="overflow-x-auto">
            <div class="inline-block min-w-full align-middle">
                <div class="overflow-hidden shadow">
                    <table class="min-w-full divide-y divide-gray-200 table-fixed">
                        <thead class="bg-gray-100">
                            <tr>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    giảng viên
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Mã giảng viên
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Số điện thoại
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Số sinh viên HD
                                </th>
                                <th scope="col"
                                    class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                    Hành động
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">

                            @if (giangviens != null)
                            { 
                                @foreach (var giangvien in giangviens)
                                {

                                    <tr class="hover:bg-gray-100">
                                        <td class="flex items-center p-4 mr-12 space-x-6 whitespace-nowrap">
                                            <div class="text-sm font-normal text-gray-500">
                                                <div class="text-base font-semibold text-gray-900">@giangvien.TenGiangVien
                                                </div>
                                                <div class="text-sm font-normal text-gray-500">
                                                    @giangvien.Email</div>
                                            </div>
                                        </td>
                                        <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                            @giangvien.MaGiangVien
                                        </td>
                                        <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                            @giangvien.SDT</td>
                                        <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                            @giangvien.SoSinhVienHuongDan</td>
                                        <td class="p-4 space-x-2 whitespace-nowrap">
                                            <a href="phancong/gvhdsv/@giangvien.MaGiangVien"
                                                class="inline-flex items-center justify-center w-1/2 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 sm:w-auto">
                                                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z">
                                                    </path>
                                                    <path fill-rule="evenodd"
                                                        d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
                                                        clip-rule="evenodd"></path>
                                                </svg>
                                                Chi tiết
                                            </a>
                                        </td>
                                    </tr>

                                }   
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div
        class="sticky bottom-0 right-0 items-center w-full pt-4 bg-white border-t border-gray-200 sm:flex sm:justify-between">
        <div class="flex items-center mb-4 sm:mb-0">
            <a href="#"
                class="inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd"
                        d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                        clip-rule="evenodd"></path>
                </svg>
            </a>
            <a href="#"
                class="inline-flex justify-center p-1 mr-2 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd"
                        d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                        clip-rule="evenodd"></path>
                </svg>
            </a>
            <span class="text-sm font-normal text-gray-500">Hiển thị <span
                    class="font-semibold text-gray-900">1-10</span> trong số <span
                    class="font-semibold text-gray-900">234</span> giảng viên</span>
        </div>
    </div>

    <!-- Modal -->
    <div class="flex items-center justify-center fixed w-screen h-screen z-30">
        @if (addBtn)
        {
            <div class="fixed inset-0 bg-gray-900/50" @onclick="() => closeBtn()"></div>
        }

        <div class="fixed top-1/2 left-1/2 right-0 -translate-x-1/2 -translate-y-1/2 flex items-center justify-center overflow-x-hidden overflow-y-auto h-fit h-max-full scrollbar-hide">

            <!-- Add Modal -->
            @if (addBtn)
            {
                <div class="relative w-full h-auto max-w-2xl max-h-screen px-4 py-4">
                    @* <!-- Modal content --> *@
                    <div class="relative bg-white rounded-lg shadow">
                        @* <!-- Modal header --> *@
                        <div class="flex items-start justify-between p-5 border-b rounded-t">
                            <h3 class="text-xl font-semibold">
                                Thêm phân cônng
                            </h3>
                            <button type="button"
                                class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center"
                                @onclick="() => closeBtn()">
                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd"
                                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                        clip-rule="evenodd"></path>
                                </svg>
                            </button>
                        </div>
                        @* <!-- Modal body --> *@
                        <div class="p-6 space-y-6">
                            <div class="grid grid-cols-6 gap-6">
                                <div class="col-span-6 sm:col-span-3">
                                    <label for="magv"
                                        class="block mb-2 text-sm font-medium text-gray-900">Giảng viên hướng dẫn
                                    </label>
                                    @* Tham khảo cách dùng select: Giangvien/Lichsugapthem.razor *@
                                        <select @bind="magvhd" id="magv"
                                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                                        <option selected hidden>--Chọn giảng viên--</option>
                                        @if (true)
                                        {
                                            foreach(var giangvien in giangviends)
                                            {
                                               <option value="@giangvien.magv">@giangvien.tengv</option>

                                            }
                                            
                                        }
                                    </select>
                                </div>
                         
                                <div class="col-span-6 sm:col-span-3">
                                    <label for="masv"
                                        class="block mb-2 text-sm font-medium text-gray-900">Mã sinh viên</label>
                                            <input type="text" name="masv" id="masv" required @oninput="HandleMssvChange"
                                               class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                </div>
                                @if(sinhvien != null)
                               {
                                     <div class="col-span-6 sm:col-span-3">
                                        <label for="name"
                                            class="block mb-2 text-sm font-medium text-gray-900">Tên sinh viên</label>
                                                <input type="text" name="name" id="name" required readonly value="@hoten"
                                            class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                    </div>

                                    <div class="col-span-6 sm:col-span-3">
                                        <label for="type"
                                            class="block mb-2 text-sm font-medium text-gray-900">Loại hình</label>
                                        <input type="text" name="type" id="type" required readonly @bind ="@loai"
                                            class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                    </div>      
                               }
                               else {
                                    <div class="col-span-6 sm:col-span-3">
                                    <label for="name"
                                        class="block mb-2 text-sm font-medium text-gray-900">Tên sinh viên</label>
                                            <input type="text" name="name" id="name" required readonly 
                                        class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                    </div>

                                    <div class="col-span-6 sm:col-span-3">
                                        <label for="type"
                                            class="block mb-2 text-sm font-medium text-gray-900">Loại hình</label>
                                        <input type="text" name="type" id="type" required readonly 
                                            class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5">
                                    </div>      
                               }
                               
                            </div>
                        </div>
                        @* <!-- Modal footer --> *@
                        <div class="items-center p-6 border-t border-gray-200 rounded-b">
                            <button
                                class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center"
                                type="submit"
                                 @onclick="() => SubmitGiangvien()" 
                                >
                                Thêm phân công
                            </button>
                        </div>

                    </div>
                </div>
            }

        </div>
    </div>
</div>

</ItemContent>
</CheckUserComponent>
