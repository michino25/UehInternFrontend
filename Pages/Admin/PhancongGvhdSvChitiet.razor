@page "/phancong/gvhdsv/{idGv}"
@using UehInternFrontend.Components
@using System.Net.Http
@using System.Net.Http.Headers
@using Newtonsoft.Json
@inject IJSRuntime JS
@inject HttpClient Http
@inject IConfiguration Configuration

@code {
    [Parameter] public string? idGv { get; set; }

    public string? api;
    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }

    List<SinhvienModel>? sinhviens = new List<SinhvienModel>();
    private DotModel dot = new DotModel();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await RenderDatas();
            StateHasChanged();
        }
    }

    private async Task RenderDatas()
    {
        dot = await KiemtraDot();
        var result = await SinhVienByGiangVien(dot.madot,idGv);
        if (result != null )
        {
            sinhviens = result;
            StateHasChanged();
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Giảng viên không được tìm thấy.");
        }
    }
    private async Task<List<SinhvienModel>> SinhVienByGiangVien(string madot,string magv)
    {
        var response = await Http.GetAsync(api + $"Giangvien/SinhVienByGiangVien?madot={madot}&magv={magv}");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<List<SinhvienModel>>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất sinh viên: {response.StatusCode}");
            return null;
        }
    }

    private async Task<DotModel> KiemtraDot()
    {
        var response = await Http.GetAsync(api + "Dot");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<DotModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Lỗi khi truy xuất dot: {response.StatusCode}");
            return null;
        }
    }
}

<PageTitle>Danh sách sinh viên</PageTitle>

<CheckUserComponent CheckRole="admin">
<ItemContent>


<div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg">
<div
    class="bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5">
    <div class="w-full mb-5">
        <div class="mb-4">

            <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl">Danh sách sinh viên</h1>
            <h1>Được hướng dẫn bởi giảng viên Đặng Ngọc Hoàng Thành</h1>
        </div>
        <div class="sm:flex">
            <div class="items-center hidden mb-3 sm:flex sm:divide-x sm:divide-gray-100 sm:mb-0">
                <form class="lg:pr-3" action="#" method="GET">
                    <label for="users-search" class="sr-only">Search</label>
                    <div class="relative mt-1 lg:w-64 xl:w-96">
                        <input type="text" name="email" id="users-search"
                            class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-500 focus:border-teal-500 block w-full p-2.5"
                            placeholder="Tìm kiếm">
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="flex flex-col">
    <div class="overflow-x-auto">
        <div class="inline-block min-w-full align-middle">
            <div class="overflow-hidden shadow">
                <table class="min-w-full divide-y divide-gray-200 table-fixed">
                    <thead class="bg-gray-100">
                        <tr>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Sinh viên
                            </th>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Mã sinh viên
                            </th>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Lớp
                            </th>
                            <th scope="col"
                                class="p-4 text-xs font-medium text-left text-gray-500 uppercase">
                                Khóa
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                    @if (sinhviens.Count > 0 )
                    { 
                        @foreach (var sinhvien in sinhviens)
                        {
                                <tr class="hover:bg-gray-100">
                                <td class="flex items-center p-4 mr-12 space-x-6 whitespace-nowrap">
                                    <div class="text-sm font-normal text-gray-500">
                                        <div class="text-base font-semibold text-gray-900">@sinhvien.ho @sinhvien.ten
                                        </div>
                                        <div class="text-sm font-normal text-gray-500">
                                            anh@st.ueh.edu.vn</div>
                                    </div>
                                </td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    @sinhvien.mssv
                                </td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    @sinhvien.thuoclop</td>
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap">
                                    K@(sinhvien.khoagoc.Substring(5,2))
                                </td>
                            </tr>
                        }
                    }
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div
    class="sticky bottom-0 right-0 items-center w-full pt-4 bg-white border-t border-gray-200 sm:flex sm:justify-between">
    <div class="flex items-center mb-4 sm:mb-0">
        <a href="#"
            class="inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
            <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd"
                    d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                    clip-rule="evenodd"></path>
            </svg>
        </a>
        <a href="#"
            class="inline-flex justify-center p-1 mr-2 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
            <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd"
                    d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                    clip-rule="evenodd"></path>
            </svg>
        </a>
        <span class="text-sm font-normal text-gray-500">Hiển thị <span
                class="font-semibold text-gray-900">1-10</span> trong số <span
                class="font-semibold text-gray-900">234</span> sinh viên</span>
    </div>
</div>

</div>

</ItemContent>
</CheckUserComponent>
