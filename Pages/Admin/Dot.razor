@page "/dot"
@using UehInternFrontend.Components
@using Newtonsoft.Json

@inject IJSRuntime JS
@inject HttpClient Http
@inject IConfiguration Configuration
@inject  NavigationManager navigationManager

@code {
    public string? api;
    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }

    private int checkDot  ;

    private DotModel dot = new DotModel();


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await RenderDatas();
            StateHasChanged();
        }
    }

    private async Task RenderDatas()
    {

        var result = await GetDot();

        if (result != null)
        {
            checkDot = 1;
            dot = result;
            StateHasChanged();
        }
        else
        {
            checkDot = -1;
        }
    }

    private async Task<DotModel> GetDot()
    {
        var response = await Http.GetAsync(api + $"Dot");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<DotModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Không tìm thấy : {response.StatusCode}");
            return null;
        }
    }


    private async Task UpdateDotKetthuc(int value)
    {
        dot.ngayketthuc = DateTime.Today;
        dot.status = "false";
        var response = await Http.PutAsJsonAsync(api + $"Dot/{dot.madot}",dot);

        if (response.IsSuccessStatusCode)
        {
             checkDot = value;
             StateHasChanged();
        }
        else
        {
            Console.WriteLine("Đã xảy ra lỗi khi cập nhật!");
        }
    }
    private async Task UpdateDot(int value)
    {
        var response = await Http.PutAsJsonAsync(api + $"Dot/{dot.madot}", dot);

        if (response.IsSuccessStatusCode)
        {
            checkDot = value;
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Đã xảy ra lỗi khi cập nhật!");
        }
    }
    private async Task ChangeDot(int value)
    {
        dot.ngaybatdau = DateTime.Today;
        dot.status = "true";
        var url = api + "Dot/add";
        var response = await Http.PostAsJsonAsync(url, dot);

        if (response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("Tạo đợt thành công");
        }
        else
        {
            Console.WriteLine("Đã xảy ra lỗi khi gửi điểm!");
        }
        checkDot = value;
        StateHasChanged();
    }
}

<PageTitle>Đợt</PageTitle>

<CheckUserComponent CheckRole="admin">
<ItemContent>

    <h1>nút bắt đầu đợt, ô nhập thông tin đợt, nút chỉnh sửa đợt, kết thúc đợt</h1>

    @if (checkDot == -1)
    {
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Tạo đợt mới</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label for="magv" class="block mb-2 text-sm font-medium text-gray-900">
                        Mã đợt
                    </label>
                    <input type="text" @bind="@dot.madot" name="magv" id="magv" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="name" class="block mb-2 text-sm font-medium text-gray-900">
                        Tên đợt
                    </label>
                    <input type="text" @bind="@dot.name" name="name" id="name" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-full">
                    <button @onclick="() => ChangeDot(1)" class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Tạo đợt
                    </button>
                </div>
            </div>
        </div>
    }

    @if (checkDot == 0)
    {
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Chỉnh sửa đợt</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label for="magv" class="block mb-2 text-sm font-medium text-gray-900">
                        Mã đợt
                    </label>
                    <input type="text" @bind="@dot.madot" name="magv" id="magv" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="name" class="block mb-2 text-sm font-medium text-gray-900">
                        Tên đợt
                    </label>
                    <input type="text" @bind="@dot.name" name="name" id="name" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-full flex justify-between">
                    <button @onclick="() => ChangeDot(1)"
                        class="text-white bg-orange-600 hover:bg-orange-700 focus:ring-4 focus:ring-orange-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Hủy
                    </button>
                        <button @onclick="() => UpdateDot(1)"
                        class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Lưu
                    </button>
                </div>
            </div>
        </div>
    }

    @if (checkDot == 1)
    {
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Thông tin đợt</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label for="first-name" class="block mb-2 text-sm font-medium text-gray-900">
                        Mã đợt
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @dot.madot
                    </p>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="first-name" class="block mb-2 text-sm font-medium text-gray-900">
                        Tên đợt
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @dot.name
                    </p>
                </div>

                <div class="col-span-6 sm:col-full flex justify-between">
                    <button @onclick="() => ChangeDot(0)"
                        class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Chỉnh sửa đợt
                    </button>
                        <button @onclick="() => UpdateDotKetthuc(-1)"
                        class="text-white bg-orange-600 hover:bg-orange-700 focus:ring-4 focus:ring-orange-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Kết thúc đợt
                    </button>
                </div>
            </div>
        </div>
    }

</ItemContent>
</CheckUserComponent>
