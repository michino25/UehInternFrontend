@page "/dot"

@code {
    public string? api;
    protected override void OnInitialized()
    {
        api = Configuration["apiBackend"];
    }

    private int checkDot;
    private DotModel dot = new DotModel();

    private User? currentUser;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            currentUser = await Service.GetUser(JS, NavigationManager);
            StateHasChanged();

            await RenderDatas();
            StateHasChanged();
        }
    }

    private async Task RenderDatas()
    {
        var result = await GetDot();

        if (result != null)
        {
            checkDot = 1;
            dot = result;
            StateHasChanged();
        }
        else
        {
            checkDot = -1;
        }
    }

    private async Task<DotModel> GetDot()
    {
        var response = await Http.GetAsync(api + $"Dot");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var uploadModel = JsonConvert.DeserializeObject<DotModel>(content);
            return uploadModel;
        }
        else
        {
            Console.WriteLine($"Không tìm thấy : {response.StatusCode}");
            return null;
        }
    }

    private async Task ChangeStateDot(int value)
    {
        @* 
        -1: Create
        0: Edit
        1: Read
         *@

        checkDot = value;
        StateHasChanged();
    }

    private async Task UpdateDot(int value)
    {
        var response = await Http.PutAsJsonAsync(api + $"Dot/{dot.madot}", dot);

        if (response.IsSuccessStatusCode)
        {
            checkDot = value;
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Đã xảy ra lỗi khi cập nhật!");
        }
    }

    private async Task UpdateDotKetthuc()
    {
        dot.ngayketthuc = DateTime.Today;
        dot.status = "false";
        var response = await Http.PutAsJsonAsync(api + $"Dot/{dot.madot}",dot);

        if (response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "Kết thúc đợt thành công.");
            await Relogin();
        }
        else
        {
            Console.WriteLine("Đã xảy ra lỗi khi cập nhật!");
        }
    }

    private async Task AddDot()
    {
        dot.ngaybatdau = DateTime.Today;
        dot.status = "true";
        var url = api + "Dot/add";
        var response = await Http.PostAsJsonAsync(url, dot);

        if (response.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "Tạo đợt thành công.");
            await Relogin();
        }
        else
        {
            Console.WriteLine("Đã xảy ra lỗi!");
        }
    }

    private async Task Relogin()
    {
        UserLogin userLogin = (UserLogin) currentUser;
        await Service.LoginRequest(JS, NavigationManager, api, userLogin, "/tongquan");
    }

    @* model *@
    private bool endBtn = false;
    private async void modelBtnClick()
    {
        endBtn = true;
        StateHasChanged();
    }

    private async Task closeBtn()
    {
        endBtn = false;
        StateHasChanged();
    }


}

<PageTitle>Đợt</PageTitle>

<CheckUserComponent CheckRole="admin">
<ItemContent>

    @if (checkDot == -1)
    {
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Tạo đợt mới</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label for="magv" class="block mb-2 text-sm font-medium text-gray-900">
                        Mã đợt
                    </label>
                    <input type="text" @bind="@dot.madot" name="magv" id="magv" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="name" class="block mb-2 text-sm font-medium text-gray-900">
                        Tên đợt
                    </label>
                    <input type="text" @bind="@dot.name" name="name" id="name" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-full">
                    <button class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit"
                        @onclick="() => AddDot()"
                        >
                        Tạo đợt
                    </button>
                </div>
            </div>
        </div>
    }

    @if (checkDot == 0)
    {
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Chỉnh sửa đợt</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label for="magv" class="block mb-2 text-sm font-medium text-gray-900">
                        Mã đợt
                    </label>
                    <input readonly type="text" @bind="@dot.madot" name="magv" id="magv" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="name" class="block mb-2 text-sm font-medium text-gray-900">
                        Tên đợt
                    </label>
                    <input type="text" @bind="@dot.name" name="name" id="name" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-teal-600 focus:border-teal-600 block w-full py-2.5 px-4" required>
                </div>

                <div class="col-span-6 sm:col-full flex justify-between">
                    <button @onclick="() => ChangeStateDot(1)"
                        class="text-white bg-orange-600 hover:bg-orange-700 focus:ring-4 focus:ring-orange-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Hủy
                    </button>
                        <button @onclick="() => UpdateDot(1)"
                        class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Lưu
                    </button>
                </div>
            </div>
        </div>
    }

    @if (checkDot == 1)
    {
        <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm 2xl:col-span-2  sm:p-6">
            <h3 class="mb-4 text-xl font-semibold">Thông tin đợt</h3>
            <div class="grid grid-cols-6 gap-6">
                <div class="col-span-6 sm:col-span-3">
                    <label for="first-name" class="block mb-2 text-sm font-medium text-gray-900">
                        Mã đợt
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @dot.madot
                    </p>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="first-name" class="block mb-2 text-sm font-medium text-gray-900">
                        Tên đợt
                    </label>
                    <p class="shadow-sm border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5">
                        @dot.name
                    </p>
                </div>

                <div class="col-span-6 sm:col-full flex justify-between">
                    <button @onclick="() => ChangeStateDot(0)"
                        class="text-white bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:ring-teal-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit">
                        Chỉnh sửa đợt
                    </button>
                        <button class="text-white bg-orange-600 hover:bg-orange-700 focus:ring-4 focus:ring-orange-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="submit"
                        @onclick="() => modelBtnClick()"
                        >
                        Kết thúc đợt
                    </button>
                </div>
            </div>
        </div>

        @* <!-- Modal --> *@
        <div class="flex items-center justify-center fixed w-screen h-screen z-30">
            @if (endBtn)
            {
                <div class="fixed inset-0 bg-gray-900/50" @onclick="() => closeBtn()"></div>
            }

            @* <!-- End Modal --> *@
            @if (endBtn)
            {
                <div class="fixed top-1/2 left-1/2 right-0 -translate-x-1/2 -translate-y-1/2 flex items-center justify-center overflow-x-hidden overflow-y-auto h-fit"
                    id="end-user-modal">
                    <div class="relative w-full h-full max-w-md px-4 md:h-auto">
                        @* <!-- Modal content --> *@
                        <div class="relative bg-white rounded-lg shadow">
                            @* <!-- Modal header --> *@
                            <div class="flex justify-end p-2">
                                <button type="button"
                                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center"
                                    @onclick="() => closeBtn()">
                                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                            clip-rule="evenodd"></path>
                                    </svg>
                                </button>
                            </div>
                            @* <!-- Modal body --> *@
                            <div class="p-6 pt-0 text-center">
                                <svg class="w-16 h-16 mx-auto text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                    xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <h3 class="mt-5 mb-6 text-lg text-gray-500">
                                    Bạn có chắc muốn kết thúc đợt? Thao tác này sẽ không thể hoàn tác
                                </h3>
                                <button class="text-white bg-orange-600 hover:bg-orange-800 focus:ring-4 focus:ring-orange-300 font-medium rounded-lg text-base inline-flex items-center px-6 py-2.5 text-center mr-3"
                                    @onclick="() => UpdateDotKetthuc()"
                                    >
                                    Đồng ý
                                </button>
                                <button
                                    class="text-gray-900 bg-white hover:bg-gray-100 focus:ring-4 focus:ring-teal-300 border border-gray-300 font-medium inline-flex items-center rounded-lg text-base px-6 py-2.5 text-center"
                                    @onclick="() => closeBtn()">
                                    Hủy
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    }

</ItemContent>
</CheckUserComponent>
